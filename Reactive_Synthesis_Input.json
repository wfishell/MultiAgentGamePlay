{"ltl_formulation": "G(safe_robots & safe_moves & correct_state_changes & obstacle_avoidance & continuous_movement & package_delivery & adaptive_routing & zone_clearing) & GF(new_packages)", "System_Player": {"name": "Robots", "init": "All robots start in the navigating state at their initial positions", "safety": "Robots never share a grid cell, avoid static obstacles (cell walls and delivered packages), avoid dynamic obstacles (other robots and undelivered boxes), carry at most one package at a time, ensure delivered packages don't block critical pathways to delivery zones, change states only when properly positioned (pickups at spawn points, drop-offs in delivery zones)", "prog": "Robots must move to a new legal grid cell at each time step, must eventually pick up and deliver assigned packages, must continuously adapt routes as obstacles change, once all packages for a time step are delivered, boxes in the delivery zone are removed"}, "Environment_Player": {"name": "Warehouse", "init": "Initial grid configuration with static obstacles (cell walls) and package spawn points", "safety": "New packages are generated only after all current packages are delivered, at most four packages per robot zone at any time", "prog": "Intermittently generate new packages at specific time steps"}, "Inputs": ["Robot positions", "Robot states", "Grid configuration (obstacles and package locations)"], "Outputs": ["Robot positions", "Robot states", "Grid configuration (obstacles and package locations)"]}